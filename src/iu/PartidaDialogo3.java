package iu;

import controlador.ControladorPartida;
import controlador.VistaPartida;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import logica.Apuesta;
import logica.Carta;
import logica.JugadorParticipante;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Daniel
 */
public class PartidaDialogo3  extends javax.swing.JDialog implements VistaPartida {

    private ControladorPartida controlador;
    private JugadorParticipante jugador;
    
    public PartidaDialogo3(java.awt.Frame parent, boolean modal, JugadorParticipante j) {
        super(parent, modal);
        initComponents();
        jugador = j;
        controlador = new ControladorPartida(j, this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        lstJugadores = new javax.swing.JList();
        btnCarta1 = new javax.swing.JButton();
        btnCarta2 = new javax.swing.JButton();
        btnCarta3 = new javax.swing.JButton();
        btnCarta4 = new javax.swing.JButton();
        btnCarta5 = new javax.swing.JButton();
        btnCartaGanadora = new javax.swing.JButton();
        btnAbandonar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lblLuz = new javax.swing.JLabel();
        lblPozo = new javax.swing.JLabel();
        lblMiDinero = new javax.swing.JLabel();
        txtApuesta = new javax.swing.JTextField();
        btnApostar = new javax.swing.JButton();
        btnPasarApuesta = new javax.swing.JButton();
        lblInfoIngresados = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(869, 567));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });
        getContentPane().setLayout(null);

        jScrollPane1.setViewportView(lstJugadores);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(10, 11, 119, 95);
        getContentPane().add(btnCarta1);
        btnCarta1.setBounds(147, 11, 95, 150);
        getContentPane().add(btnCarta2);
        btnCarta2.setBounds(260, 11, 95, 150);
        getContentPane().add(btnCarta3);
        btnCarta3.setBounds(373, 11, 95, 150);
        getContentPane().add(btnCarta4);
        btnCarta4.setBounds(486, 11, 95, 150);
        getContentPane().add(btnCarta5);
        btnCarta5.setBounds(599, 11, 95, 150);

        btnCartaGanadora.setMargin(new java.awt.Insets(2, 14, 2, 40));
        getContentPane().add(btnCartaGanadora);
        btnCartaGanadora.setBounds(734, 11, 95, 150);

        btnAbandonar.setText("Salir");
        btnAbandonar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAbandonarActionPerformed(evt);
            }
        });
        getContentPane().add(btnAbandonar);
        btnAbandonar.setBounds(734, 494, 95, 23);

        jLabel1.setText("Apuesta base:");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(10, 179, 70, 14);

        jLabel2.setText("Pozo:");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(10, 211, 27, 14);

        jLabel3.setText("Mi dinero:");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(10, 243, 47, 14);

        lblLuz.setText("jLabel4");
        getContentPane().add(lblLuz);
        lblLuz.setBounds(98, 179, 34, 14);

        lblPozo.setText("jLabel5");
        getContentPane().add(lblPozo);
        lblPozo.setBounds(98, 211, 34, 14);

        lblMiDinero.setText("jLabel6");
        getContentPane().add(lblMiDinero);
        lblMiDinero.setBounds(98, 243, 34, 14);
        getContentPane().add(txtApuesta);
        txtApuesta.setBounds(10, 276, 120, 20);

        btnApostar.setText("Apostar");
        btnApostar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApostarActionPerformed(evt);
            }
        });
        getContentPane().add(btnApostar);
        btnApostar.setBounds(10, 310, 120, 23);

        btnPasarApuesta.setText("Paso");
        btnPasarApuesta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPasarApuestaActionPerformed(evt);
            }
        });
        getContentPane().add(btnPasarApuesta);
        btnPasarApuesta.setBounds(10, 340, 120, 23);
        getContentPane().add(lblInfoIngresados);
        lblInfoIngresados.setBounds(360, 210, 240, 30);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnApostarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApostarActionPerformed
        controlador.realizarApuesta(jugador, Integer.parseInt(txtApuesta.getText()));
    }//GEN-LAST:event_btnApostarActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        controlador.removerJugador();
    }//GEN-LAST:event_formWindowClosed

    private void btnPasarApuestaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPasarApuestaActionPerformed
        controlador.pasarApuesta();
    }//GEN-LAST:event_btnPasarApuestaActionPerformed

    private void btnAbandonarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAbandonarActionPerformed
        controlador.removerJugador();
    }//GEN-LAST:event_btnAbandonarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAbandonar;
    private javax.swing.JButton btnApostar;
    private javax.swing.JButton btnCarta1;
    private javax.swing.JButton btnCarta2;
    private javax.swing.JButton btnCarta3;
    private javax.swing.JButton btnCarta4;
    private javax.swing.JButton btnCarta5;
    private javax.swing.JButton btnCartaGanadora;
    private javax.swing.JButton btnPasarApuesta;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblInfoIngresados;
    private javax.swing.JLabel lblLuz;
    private javax.swing.JLabel lblMiDinero;
    private javax.swing.JLabel lblPozo;
    private javax.swing.JList lstJugadores;
    private javax.swing.JTextField txtApuesta;
    // End of variables declaration//GEN-END:variables

    @Override
    public void mostrarCarta(Carta carta, JButton btn) {

        String url = "src/cartas/" +carta.getCodImagen() + ".png";
        ImageIcon c = new ImageIcon((new ImageIcon(url).getImage()
                .getScaledInstance(btn.getWidth(), btn.getHeight(), 
                java.awt.Image.SCALE_SMOOTH)));

        btn.setIcon(c);
    }

   @Override
   public void mostrarMano(ArrayList<Carta> cartas)
   {
       mostrarCarta(cartas.get(0), btnCarta1);
       mostrarCarta(cartas.get(1), btnCarta2);
       mostrarCarta(cartas.get(2), btnCarta3);
       mostrarCarta(cartas.get(3), btnCarta4);
       mostrarCarta(cartas.get(4), btnCarta5);       
   }
    
    @Override
    public void mostrarJugadores(ArrayList<JugadorParticipante> jugadores) {
        lstJugadores.setListData(jugadores.toArray());
        int faltan = devolverCantJugadoresParaEmpezar();
        if(faltan == 1){
                lblInfoIngresados.setText("Esperando al último jugador.");             
        }else
        {
                lblInfoIngresados.setText("Esperando jugadores... faltan " + faltan);
        }
    }
            
    @Override
    public void mostrarValores(int luz, int pozo, int dineroJugador) {
        lblLuz.setText(luz + "");
        lblPozo.setText(pozo + "");
        lblMiDinero.setText(dineroJugador + "");
    }

    @Override
    public void mostrarEstado(String estado) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void mostrarApuesta(Apuesta a) { 
        String texto = a.getApostador().getNombre() + " apostó $" + a.getMontoApostado() + ". ¿Aceptas?";
        pnlAceptarApuesta(texto);
        pnlApostar(false);
        
        //pnlAceptarApuesta.setVisible(true);        
        //lblInfoApuesta.setText(a.getApostador().getNombre() + " apostó $" + a.getMontoApostado() + ". ¿Aceptas?");
    }

    @Override
    public void cambiaDinero(JugadorParticipante jugador) {
        lblPozo.setText(jugador.getPartida().getPozo() + "");
        lblMiDinero.setText(jugador.getSaldoJugador() + "");
    }

    @Override
    public void esconderAndMostrarAlInicio() {
        
        //pnlAceptarApuesta.setVisible(false);
        pnlApostar(false);
        pnlValores(false);
        //pnlFinMano.setVisible(false);
        //optFinPartida.setVisible(false);
    }

    @Override
    public void iniciarPartida(JugadorParticipante j) {
        inicioRonda(j);
        pnlFaltan(false);
    }

        @Override
    public void inicioRonda(JugadorParticipante j) {
        pnlApostar(true);
        pnlValores(true);
        //pnlFinMano.setVisible(false);
        mostrarValores(j.getPartida().getLuz(), j.getPartida().getPozo(), j.getSaldoJugador());
        mostrarMano(j.getMano());
    }
                    

    
    
    
//    private void togglePanelFinMano() {
//        if(!pnlFinMano.isVisible()) pnlFinMano.setVisible(true);
//        else pnlFinMano.setVisible(false);                
//    }

    @Override
    public void mostrarGanador(JugadorParticipante ganador) {
        String texto = "Ganó " + ganador.getNombre() + " con esta carta: \n " + "Quieres seguir jugando?" ;
        pnlFinMano(texto);
        
        //pnlFinMano.setVisible(true);
        //lblInfoGanador.setText("Ganó " + ganador.getNombre() + " con esta carta: \n " + "Quieres seguir jugando?");
        
        mostrarCarta(ganador.devolverMasAlta(), btnCartaGanadora);
    }

    @Override
    public void todosPasan() {
        String texto = "Todos pasaron: el pozo se acumuló. \n " + "Quieres seguir jugando?";
        pnlFinMano(texto);
        //pnlFinMano.setVisible(true);
        //lblInfoGanador.setText();
    }

    
    @Override
    public void finMano() {
    }

    @Override
    public void aceptarApuesta() {
        ///pnlAceptarApuesta.setVisible(false);
    }

    @Override
    public void actualizarPozo(int pozo) {
        lblPozo.setText(pozo + "");
    }

    @Override
    public void jugadorAposto() {
        pnlApostar(false);
    }

    @Override
    public void jugadorNoPuedeSeguir(String msg) {
        pnlFinPartida(msg);
        //optFinPartida.showMessageDialog(null, msg);
        //this.dispose();
    }
    
    @Override
    public void cerrarVentana(){
        this.dispose();
    }
    
    @Override
    public void mostrarNombreJugador(String nombreCompleto) {
        setTitle(nombreCompleto);
    }

    @Override
    public void mostrarGanadorPorSerUltimo(JugadorParticipante ganador) {
        String texto = "Ganó " + ganador.getNombre() + " por ser el último jugador";
        pnlFinPartida(texto);
        //optFinPartida.showMessageDialog(null, "Ganó " + ganador.getNombre() + " por ser el último jugador");
        //controlador.cerrarUltimoJugador();
    }
    
    public int devolverCantJugadoresParaEmpezar(){
        int faltan = jugador.getPartida().getCantJugadores();
        return faltan - jugador.getPartida().getJugadoresParticipantes().size();
    }

    @Override
    public void mostrarMensaje(String msg) {
            //optFinPartida.showMessageDialog(null, msg);    
    }
    
    public void pnlApostar(boolean mostrar){
        btnApostar.setVisible(mostrar);
        txtApuesta.setVisible(mostrar);
        btnPasarApuesta.setVisible(mostrar);
    }
    
    public void pnlValores(boolean mostrar){
        jLabel1.setVisible(mostrar);
        jLabel2.setVisible(mostrar);
        jLabel3.setVisible(mostrar);
        lblLuz.setVisible(mostrar);
        lblPozo.setVisible(mostrar);
        lblMiDinero.setVisible(mostrar);
    }
    
    public void pnlFaltan(boolean mostrar){
        lblInfoIngresados.setVisible(mostrar);
    }
    
    public void pnlAceptarApuesta(String texto){
        Object[] opciones = {"Aceptar, Pasar"};
        int ventana = JOptionPane.showOptionDialog(rootPane,texto,"A Silly Question",JOptionPane.YES_NO_CANCEL_OPTION,JOptionPane.QUESTION_MESSAGE,null,
            opciones,//the titles of buttons
            opciones[2]);//default button title
        if (ventana == 0){
            controlador.aceptarApuesta();
        }else {
            controlador.removerJugador();
        }
    }
    
    public void pnlFinMano(String texto){
        Object[] opciones = {"Si, No"};
        int ventana = JOptionPane.showOptionDialog(rootPane,texto,"A Silly Question",JOptionPane.YES_NO_CANCEL_OPTION,JOptionPane.QUESTION_MESSAGE,null,
            opciones,//the titles of buttons
            opciones[2]);//default button title
        if (ventana == 0){
            controlador.continuoJugando();
        }else {
            controlador.removerJugador();
        }
    }
    
    public void pnlFinPartida(String texto){
        Object[] opciones = {"OK"};
        JOptionPane.showOptionDialog(rootPane,texto,"A Silly Question",JOptionPane.OK_OPTION,JOptionPane.QUESTION_MESSAGE,null,opciones,opciones[0]);
    }
}
